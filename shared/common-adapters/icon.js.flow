// @flow
import * as React from 'react'
import type {IconType} from './icon.constants'
import {type StylesCrossPlatform, type StylesCrossPlatformWithSomeDisallowed, type Color} from '../styles'

// These must be passed as props
type DisallowedStyles = {
  color?: empty,
  hoverColor?: empty,
  fontSize?: empty,
}

export type Props = {
  type: IconType,
  hint?: string,
  onClick?: ?(event: SyntheticEvent<Element>) => void,
  onPress?: void,
  onMouseEnter?: ?() => void,
  onMouseLeave?: ?() => void,
  style?: StylesCrossPlatformWithSomeDisallowed<DisallowedStyles>,
  opacity?: boolean,
  inheritColor?: boolean,
  underlayColor?: string,
  className?: string,
  // External services use custom colors which aren't defined in the stylesheet
  // So they break the css optimizations. We have this extra prop so we can set
  // the color without messing with the existing color code.
  // TODO would be nice to not have to do this.
  externalServiceColor?: Color,
  color?: Color,
  hoverColor?: string,
  fontSize?: number,
  // TODO cleanup how this container stuff works, this is to allow you to style the box that sometimes exists
  boxStyle?: StylesCrossPlatform,
}

declare export default class Icon extends React.Component<Props> {}
declare export function iconTypeToImgSet(imgMap: {[size: string]: IconType}, targetSize: number): string
declare export function urlsToImgSet(imgMap: {[size: string]: string}, size: number): ?string
declare export function castPlatformStyles(
  styles: StylesCrossPlatform
): StylesCrossPlatformWithSomeDisallowed<DisallowedStyles>

export type {IconType} from './icon.constants'
